{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ibeh\\\\to-do-list\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Entry from './components/entry';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEntry = () => {\n      const c = this.state.counters;\n      this.setState(prevState => ({\n        counters: [...prevState.counters, {\n          id: c[c.length - 1].id++,\n          value: ''\n        }]\n      }));\n    };\n\n    this.handleDelete = counterIndex => {\n      const counters = this.state.counters.filter(counter => counter.id !== counterIndex);\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleCheckBoxChange = () => {\n      this.state.checked === false ? this.setState({\n        checked: true\n      }) : this.setState({\n        checked: false\n      });\n    };\n\n    this.state = {\n      counters: [{\n        id: 0,\n        value: ''\n      } // {id:2},\n      // {id:3},\n      // {id:4},\n      // {id:5}\n      ],\n      checked: false\n    };\n    console.log(this.state.counters[0].id);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    var counters = this.state.counters.map(c => {\n      c.value = event.target.value;\n    }); // var counters= this.state.counters[index].value= event.target.value;\n\n    this.setState({\n      counters\n    }); // this.setState({value: Event.target.value});\n  }\n\n  render() {\n    console.log(this.state.counters);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      counter: this.state.counters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Entry, {\n      counter: this.state.counters,\n      value: this.state.counters.value,\n      onCheckBoxClick: this.handleCheckBoxChange,\n      onChange: this.handleChange,\n      onAdd: this.handleEntry,\n      onDelete: this.handleDelete,\n      mssg: this.state.checked === false ? \"Undone\" : \"Done\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ibeh/to-do-list/src/App.js"],"names":["React","Component","NavBar","Entry","App","constructor","props","handleEntry","c","state","counters","setState","prevState","id","length","value","handleDelete","counterIndex","filter","counter","handleCheckBoxChange","checked","console","log","handleChange","bind","event","map","target","render"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Entry from './components/entry';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      counters: [\n        {id:0, value:''},\n        // {id:2},\n        // {id:3},\n        // {id:4},\n        // {id:5}\n      ],\n      checked:false\n      \n    };\n    console.log(this.state.counters[0].id)\n    this.handleChange = this.handleChange.bind(this);\n  }\n   handleChange(event) {\n     var counters= this.state.counters.map(c=>{c.value= event.target.value})\n    // var counters= this.state.counters[index].value= event.target.value;\n    this.setState({counters});\n    // this.setState({value: Event.target.value});\n  }\n  handleEntry=()=>{\n    const c=this.state.counters;\n    this.setState(prevState=>({\n      counters: [ ...prevState.counters,{id:(c[(c.length)-1].id++), value:''}]\n    }));\n    \n  }  \n  handleDelete= (counterIndex) =>{\n    const counters= this.state.counters.filter(counter => counter.id !==counterIndex);\n    this.setState({counters});\n  }\n  handleCheckBoxChange=(\n    \n  )=>{\n    this.state.checked===false? this.setState({checked:true}):this.setState({checked:false})\n  }\n  render() { \n    console.log(this.state.counters);\n    return ( \n    <React.Fragment>\n      <NavBar counter={this.state.counters}/>\n      <Entry counter={this.state.counters} value={this.state.counters.value} onCheckBoxClick={this.handleCheckBoxChange} onChange={this.handleChange} onAdd={this.handleEntry} onDelete={this.handleDelete} mssg={(this.state.checked===false)? \"Undone\": \"Done\"}/>\n    </React.Fragment> );\n  }\n}\n \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}