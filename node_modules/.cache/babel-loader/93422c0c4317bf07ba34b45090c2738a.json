{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ibeh\\\\to-do-list\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Entry from './components/entry';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEntry = index => {\n      const c = this.state.counters;\n      this.setState(state => {\n        const counters = [...state.counters, {\n          id: c[c.length - 1].id++,\n          value: '',\n          checked: false\n        }];\n        return {\n          counters\n        };\n      });\n    };\n\n    this.handleDelete = counterIndex => {\n      const counters = this.state.counters.filter(counter => counter.id !== counterIndex);\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleCheckBoxClick = index => {\n      const counters = this.state.counters.map((c, i) => {\n        console.log(c.checked);\n\n        if (i === index) {\n          c.checked === false ? c.checked = true : c.checked = false;\n          console.log(c.checked);\n        }\n      });\n      this.setState({\n        counters\n      }); // counter.checked=(counter.checked)===false? true:false\n      // this.setState(a=>({\n      //   counters: [ ...prevCounters,counter]\n      // }));\n      // this.setState({counters});\n      // const c= this.state.counters[index].checked;\n      // this.state.checked===false? this.setState({checked:true}):this.setState({checked:false})\n      // console.log(index);\n      // console.log(this.state.counters[index].checked)\n\n      console.log(this.state.counters[index].checked);\n      return this.state.counters[index].checked === false ? \"Undone\" : \"Done\";\n    };\n\n    this.handleMssg = () => {\n      this.handleCheckBoxClick(index);\n    };\n\n    this.state = {\n      counters: [{\n        id: 0,\n        value: '',\n        checked: false\n      } // {id:2},\n      // {id:3},\n      // {id:4},\n      // {id:5}\n      ],\n      checked: false\n    };\n    console.log(this.state.counters[0].id);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    var counters = this.state.counters.map(c => {\n      c.value = event.target.value;\n    }); // var counters= this.state.counters[index].value= event.target.value;\n\n    this.setState({\n      counters\n    }); // this.setState({value: Event.target.value});\n  }\n\n  render() {\n    console.log(this.state.counters);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      counter: this.state.counters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Entry, {\n      counter: this.state.counters,\n      value: this.state.counters.value,\n      onCheckBoxClick: this.handleCheckBoxClick,\n      onTextChange: this.handleChange,\n      onAdd: this.handleEntry,\n      onDelete: this.handleDelete,\n      mssg: this.handleMssg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ibeh/to-do-list/src/App.js"],"names":["React","Component","NavBar","Entry","App","constructor","props","handleEntry","index","c","state","counters","setState","id","length","value","checked","handleDelete","counterIndex","filter","counter","handleCheckBoxClick","map","i","console","log","handleMssg","handleChange","bind","event","target","render"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Entry from './components/entry';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      counters: [\n        {id:0, value:'',checked:false},\n        // {id:2},\n        // {id:3},\n        // {id:4},\n        // {id:5}\n      ],\n      checked:false\n      \n    };\n    console.log(this.state.counters[0].id)\n    this.handleChange = this.handleChange.bind(this);\n  }\n   handleChange(event) {\n     var counters= this.state.counters.map(c=>{c.value= event.target.value})\n    // var counters= this.state.counters[index].value= event.target.value;\n    this.setState({counters});\n    // this.setState({value: Event.target.value});\n  }\n  handleEntry=(index)=>{\n    const c=this.state.counters;\n    this.setState(state=>{\n      const counters=  [ ...state.counters,{id:(c[(c.length)-1].id++), value:'',checked:false}]\n      return{\n        counters\n      }\n    });\n    \n  }  \n  handleDelete= (counterIndex) =>{\n    const counters= this.state.counters.filter(counter => counter.id !==counterIndex);\n    this.setState({counters});\n  }\n  handleCheckBoxClick=(index)=>{\n    const counters= this.state.counters.map((c,i)=>{\n      console.log(c.checked)\n      if (i===index){\n        c.checked===false? c.checked= true : c.checked=false\n        console.log(c.checked)\n      }\n    });\n    this.setState({counters})\n    // counter.checked=(counter.checked)===false? true:false\n    // this.setState(a=>({\n    //   counters: [ ...prevCounters,counter]\n    // }));\n    // this.setState({counters});\n    // const c= this.state.counters[index].checked;\n    // this.state.checked===false? this.setState({checked:true}):this.setState({checked:false})\n    // console.log(index);\n    // console.log(this.state.counters[index].checked)\n    console.log(this.state.counters[index].checked);\n    return (this.state.counters[index].checked===false)? \"Undone\": \"Done\"\n    \n  }\n  handleMssg=()=>{\n    this.handleCheckBoxClick(index)\n  }\n  render() { \n    console.log(this.state.counters);\n    return ( \n    <React.Fragment>\n      <NavBar counter={this.state.counters}/>\n      <Entry counter={this.state.counters} value={this.state.counters.value} onCheckBoxClick={this.handleCheckBoxClick} onTextChange={this.handleChange} onAdd={this.handleEntry} onDelete={this.handleDelete} mssg={this.handleMssg}/>\n    </React.Fragment> );\n  }\n}\n \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}